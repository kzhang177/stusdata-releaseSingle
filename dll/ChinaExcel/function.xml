<script>
<count>216</count>

<act1>
<type>3</type>
<sign>控制语句及变量赋值</sign>
<name>varchange</name>
<vname>设置变量</vname>
<param>
<count>1</count>
<p1>
<var>0</var>
<type>0</type>
<name>变量公式</name>
</p1>
</param>
</act1>

<act2>
<type>2</type>
<sign>控制语句及变量赋值</sign>
<name>if</name>
<vname>if判断</vname>
<param>
<count>1</count>
<p1>
<var>0</var>
<type>0</type>
<name>if条件判断</name>
</p1>
</param>
</act2>

<act3>
<type>2</type>
<sign>控制语句及变量赋值</sign>
<name>for</name>
<vname>for循环</vname>
<param>
<count>1</count>
<p1>
<var>0</var>
<type>0</type>
<name>for条件循环</name>
</p1>
</param>
</act3>

<act4>
<type>2</type>
<sign>控制语句及变量赋值</sign>
<name>while</name>
<vname>while循环</vname>
<param>
<count>1</count>
<p1>
<var>0</var>
<type>0</type>
<name>while条件循环</name>
</p1>
</param>
</act4>





<act5>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellValue</name>
<vname>获取单元格实际内容</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellValue(行号,列号)</function>
<caption>返回指定单元格的实际值，如果该单元格为空，则返回空。</caption>
</act5>

<act6>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellShowValue</name>
<vname>获取单元格显示内容</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellShowValue(行号,列号)</function>
<caption>返回指定单元格的显示值，如果该单元格为空，则返回空。</caption>
</act6>

<act7>
<type>1</type>
<sign>单元格方法</sign>
<name>GetColor</name>
<vname>获取索引颜色值</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>索引值</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetColor(索引值)</function>
<caption>返回指定索引的颜色,颜色索引值范围：1-16。</caption>
</act7>

<act8>
<type>1</type>
<sign>单元格方法</sign>
<name>GetRGBValue</name>
<vname>获取RGB颜色值</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>红色</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>绿色</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>蓝色</name>
</p3>
<p4>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p4>
</param>
<function>GetRGBValue(红色,绿色,蓝色)</function>
<caption>返回指定的RGB颜色。前三个参数的范围都是 0-255 。</caption>
</act8>

<act9>
<type>1</type>
<sign>单元格方法</sign>
<name>IsCellTextHide</name>
<vname>返回单元格文本是否隐藏</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellTextHide(行号,列号)</function>
<caption>返回指定单元格文本是否隐藏。</caption>
</act9>

<act10>
<type>1</type>
<sign>单元格方法</sign>
<name>IsCellProtect</name>
<vname>返回单元格是否保护</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellProtect(行号,列号)</function>
<caption>返回指定单元格文本是否保护。</caption>
</act10>

<act11>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellBkColor</name>
<vname>设置区域背景色</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p5>
</param>
<function>SetCellBkColor(起始行,起始列,结束行,结束列,颜色值)</function>
<caption>设置指定区域的单元背景的颜色。颜色值可以由GetRGBValue或GetColor返回，也可以直接输入数值。</caption>
</act11>

<act12>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellBkColorEffect</name>
<vname>设置区域特殊效果背景色</vname>
<param>
<count>9</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>起始颜色</name>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>中间颜色</name>
</p6>
<p7>
<var>1</var>
<type>1</type>
<name>结束颜色</name>
</p7>
<p8>
<var>1</var>
<type>3</type>
<name>效果</name>
<showvalue1>实体</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>横向渐进色</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>纵向渐进色</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>横向居中渐进色</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>纵向居中渐进色</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>横向3色渐进色</showvalue6>
<realvalue6>5</realvalue6>
<showvalue7>纵向3色渐进色</showvalue7>
<realvalue7>6</realvalue7>
<showvalue8>混色</showvalue8>
<realvalue8>7</realvalue8>
<showvalue9>对角阴影</showvalue9>
<realvalue9>8</realvalue9>
<showvalue10>横向阴影</showvalue10>
<realvalue10>9</realvalue10>
<showvalue11>纵向阴影</showvalue11>
<realvalue11>10</realvalue11>
<showvalue12>横向突出</showvalue12>
<realvalue12>11</realvalue12>
<showvalue13>纵向突出</showvalue13>
<realvalue13>12</realvalue13>
<showvalue14>软突出</showvalue14>
<realvalue14>13</realvalue14>
<showvalue15>硬突出</showvalue15>
<realvalue15>14</realvalue15>
<showvalue16>金属表面</showvalue16>
<realvalue16>15</realvalue16>
</p8>
<p9>
<var>1</var>
<type>1</type>
<name>粒度</name>
</p9>
</param>
<function>SetCellBkColorEffect(起始行,起始列,结束行,结束列,起始颜色,中间颜色,结束颜色,效果,粒度)</function>
<caption>对指定单元区域设置特殊效果的单元背景颜色。颜色值可以由GetRGBValue或GetColor返回，也可以直接输入数值；效果范围：1-15；粒度范围：0-255</caption>
</act12>

<act13>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellProtect</name>
<vname>设置区域保护</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>是否保护</name>
<showvalue1>保护</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不保护</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellProtect(起始行,起始列,结束行,结束列,是否保护)</function>
<caption>设置指定区域的单元格是否保护。</caption>
</act13>

<act14>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellTextColor</name>
<vname>设置字体颜色</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p5>
</param>
<function>SetCellTextColor(起始行,起始列,结束行,结束列,颜色值)</function>
<caption>设置指定区域的单元字体的颜色。颜色值是指RGB颜色，可以用GetRGBValue或GetColor返回，或者直接输入数值。</caption>
</act14>

<act15>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellTextHide</name>
<vname>是否隐藏单元文本</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>是否隐藏</name>
<showvalue1>隐藏</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不隐藏</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellTextHide(起始行,起始列,结束行,结束列,是否隐藏)</function>
<caption>设置指定区域的单元格文本显示或隐藏。</caption>
</act15>

<act16>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellValue</name>
<vname>设置单元值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>单元值</name>
</p3>
</param>
<function>SetCellValue(行号,列号,单元值)</function>
<caption>设置指定的行列的单元格值或公式。</caption>
</act16>

<act17>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellVertTextAlign</name>
<vname>文字纵向对齐</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>对齐方式</name>
<showvalue1>缺省对齐</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>靠上对齐</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>中间对齐</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>靠下对齐</showvalue4>
<realvalue4>3</realvalue4>
</p5>
</param>
<function>SetCellVertTextAlign(起始行,起始列,结束行,结束列,对齐方式)</function>
<caption>设置指定的区域单元的文字纵向对齐方式，其中对齐方式包括：缺省对齐（0），靠上对齐（1），中间对齐（2），靠下对齐（3），其余值都表示缺省对齐。</caption>
</act17>

<act18>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellHorzTextAlign</name>
<vname>文字横向对齐</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>对齐方式</name>
<showvalue1>缺省对齐</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>左对齐</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>中间对齐</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>右对齐</showvalue4>
<realvalue4>3</realvalue4>
</p5>
</param>
<function>SetCellHorzTextAlign(起始行,起始列,结束行,结束列,对齐方式)</function>
<caption>设置指定的区域单元的文字纵向对齐方式，其中对齐方式包括：缺省对齐（0），左对齐（1），中间对齐（2），右对齐（3），其余值都表示缺省对齐。</caption>
</act18>

<act19>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCombinationCellTransparent</name>
<vname>组合单元背景是否透明</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>是否透明</name>
<showvalue1>透明</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不透明</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCombinationCellTransparent(起始行,起始列,结束行,结束列,是否透明)</function>
<caption>设置组合单元背景是否透明。这个功能主要是用于设置了背景图片时，在单元组合后，还可以看到背景图片的功能。</caption>
</act19>




<act20>
<type>1</type>
<sign>表格方法</sign>
<name>GetMaxRow</name>
<vname>获取最大行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetMaxRow()</function>
<caption>取得当前表格的最大行值。</caption>
</act20>

<act21>
<type>1</type>
<sign>表格方法</sign>
<name>GetMaxCol</name>
<vname>获取最大列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetMaxCol()</function>
<caption>取得当前表格的最大列值。</caption>
</act21>

<act22>
<type>1</type>
<sign>表格方法</sign>
<name>GetSelectRegionStartRow</name>
<vname>获取选中区域起始行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetSelectRegionStartRow()</function>
<caption>返回当前选中区域的起始行号。</caption>
</act22>

<act23>
<type>1</type>
<sign>表格方法</sign>
<name>GetSelectRegionStartCol</name>
<vname>获取选中区域起始列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetSelectRegionStartCol()</function>
<caption>返回当前选中区域的起始列号。</caption>
</act23>

<act24>
<type>1</type>
<sign>表格方法</sign>
<name>GetSelectRegionEndRow</name>
<vname>获取选中区域结束行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetSelectRegionEndRow()</function>
<caption>返回当前选中区域的结束行号。</caption>
</act24>

<act25>
<type>1</type>
<sign>表格方法</sign>
<name>GetSelectRegionEndCol</name>
<vname>获取选中区域结束列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetSelectRegionEndCol()</function>
<caption>返回当前选中区域的结束列号。</caption>
</act25>

<act26>
<type>1</type>
<sign>表格方法</sign>
<name>IsSelectedCell</name>
<vname>单元格是否选中</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsSelectedCell(行号,列号)</function>
<caption>返回指定单元是否是在光标选中区域。</caption>
</act26>

<act27>
<type>0</type>
<sign>表格方法</sign>
<name>Refresh</name>
<vname>整表刷新</vname>
<param>
<count>0</count>
</param>
<function>Refresh()</function>
<caption>进行整表的刷新，调用SetCellValue,SetCellContent 后需要调用此函数。</caption>
</act27>

<act28>
<type>0</type>
<sign>表格方法</sign>
<name>RefreshViewSize</name>
<vname>整表尺寸刷新</vname>
<param>
<count>0</count>
</param>
<function>RefreshViewSize()</function>
<caption>进行整表尺寸的刷新，在报表的行列数有变动的之后需要调用此方法。调用InsertFormatRows、InsertFormatCols、CopyColCellFormat、CopyRowCellFormat 之后需要调用此函数。</caption>
</act28>

<act29>
<type>0</type>
<sign>表格方法</sign>
<name>SetCanRefresh</name>
<vname>自动刷新</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否刷新</name>
<showvalue1>自动刷新</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不刷新</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetCanRefresh(是否刷新)</function>
<caption>先设置为FALSE，当所有的操作完成后，再设置为TRUE，然后调用Refresh或RefreshViewSize进行刷新，这样多个操作时可以提高刷新的速度。</caption>
</act29>

<act30>
<type>0</type>
<sign>表格方法</sign>
<name>SetCursorBorderLineWidth</name>
<vname>设置光标外框线宽度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>宽度</name>
</p1>
</param>
<function>SetCursorBorderLineWidth(宽度)</function>
<caption>设置单元光标外框线宽度，缺省为3，如果为0，则没有外框线。</caption>
</act30>

<act31>
<type>0</type>
<sign>表格方法</sign>
<name>SetMaxRows</name>
<vname>设置最大行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>行数</name>
</p1>
</param>
<function>SetMaxRows()</function>
<caption>设置表格最大行数。</caption>
</act31>

<act32>
<type>0</type>
<sign>表格方法</sign>
<name>SetMaxCols</name>
<vname>设置最大列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>列数</name>
</p1>
</param>
<function>SetMaxCols()</function>
<caption>设置表格最大列数。</caption>
</act32>

<act33>
<type>0</type>
<sign>表格方法</sign>
<name>SetTipMessage</name>
<vname>设置报表提示信息</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>0</type>
<name>提示信息</name>
</p1>
</param>
<function>SetTipMessage(提示信息)</function>
<caption>设置报表要显示提示信息。</caption>
</act33>

<act34>
<type>0</type>
<sign>表格方法</sign>
<name>SetOnlyShowTipMessage</name>
<vname>是否只显示提示信息</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否提示</name>
<showvalue1>显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetOnlyShowTipMessage(是否提示)</function>
<caption>设置报表是否只显示提示信息，在加载报表的时候可以做为提示信息来设置。</caption>
</act34>

<act35>
<type>0</type>
<sign>表格方法</sign>
<name>SetPaperColor</name>
<vname>设置页面背景色</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p1>
</param>
<function>SetPaperColor(颜色值)</function>
<caption>设置表格页面的背景色，颜色值可以用GetRGBValue或GetColor返回，或者直接输入数值。</caption>
</act35>




<act36>
<type>0</type>
<sign>计算方法</sign>
<name>Calculate</name>
<vname>计算报表</vname>
<param>
<count>0</count>
</param>
<function>Calculate()</function>
<caption>对统计报表和所有公式全部进行计算。</caption>
</act36>

<act37>
<type>0</type>
<sign>计算方法</sign>
<name>SetCanCalculate</name>
<vname>设置是否自动计算</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否计算</name>
<showvalue1>自动计算</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不自动计算</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetCanCalculate()</function>
<caption>设置是否自动计算。</caption>
</act37>






<act38>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetColSize</name>
<vname>获取列宽</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>列号</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>单位类型</name>
<showvalue1>0.1毫米</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>屏幕像素</showvalue2>
<realvalue2>1</realvalue2>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetColSize(列号,单位类型)</function>
<caption>取得指定列的宽度，其中单位类型包括 0：0.1毫米；1：屏幕像素。</caption>
</act38>

<act39>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetRowSize</name>
<vname>获取行高</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>单位类型</name>
<showvalue1>0.1毫米</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>屏幕像素</showvalue2>
<realvalue2>1</realvalue2>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetRowSize(行号,单位类型)</function>
<caption>取得指定行的高度，其中单位类型包括 0：0.1毫米；1：屏幕像素。</caption>
</act39>

<act40>
<type>1</type>
<sign>行列属性方法</sign>
<name>InSelectedCol</name>
<vname>指定列是否选中</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>列号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>InSelectedCol(列号)</function>
<caption>返回指定列是否在选中行区域中，如果是，则返回true ；否则返回false 。</caption>
</act40>

<act41>
<type>1</type>
<sign>行列属性方法</sign>
<name>InSelectedRow</name>
<vname>指定行是否选中</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>InSelectedRow(行号)</function>
<caption>返回指定行是否在选中列区域中，如果是，则返回true ；否则返回false 。</caption>
</act41>

<act42>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetViewStartRow</name>
<vname>返回起始行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetViewStartRow(行号)</function>
<caption>返回在可见范围之内的起始行。</caption>
</act42>

<act43>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetViewStartCol</name>
<vname>返回起始列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetViewStartCol(列号)</function>
<caption>返回在可见范围之内的起始列。</caption>
</act43>

<act44>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetColSize</name>
<vname>设置列宽</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>列宽</name>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>单位类型</name>
<showvalue1>0.1毫米</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>屏幕像素</showvalue2>
<realvalue2>1</realvalue2>
</p4>
</param>
<function>SetColSize(起始列,结束列,列宽,单位类型)</function>
<caption>设置指定区域列的宽度。其中单位类型0表示0.1毫米，1表示屏幕像素。</caption>
</act44>

<act45>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetRowSize</name>
<vname>设置行高</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>行高</name>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>单位类型</name>
<showvalue1>0.1毫米</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>屏幕像素</showvalue2>
<realvalue2>1</realvalue2>
</p4>
</param>
<function>SetRowSize(起始行,结束行,行高,单位类型)</function>
<caption>设置指定区域行的高度。其中单位类型0表示0.1毫米，1表示屏幕像素。</caption>
</act45>

<act46>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetRowHide</name>
<vname>隐藏行</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>是否隐藏</name>
<showvalue1>隐藏</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不隐藏</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>SetRowHide(起始行,结束行,是否隐藏)</function>
<caption>设置指定行显示或隐藏。</caption>
</act46>

<act47>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetColHide</name>
<vname>隐藏列</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>是否隐藏</name>
<showvalue1>隐藏</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不隐藏</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>SetColHide(起始列,结束列,是否隐藏)</function>
<caption>设置指定列显示或隐藏。</caption>
</act47>

<act48>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetRowHide1</name>
<vname>打印状态隐藏行</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>是否隐藏</name>
<showvalue1>隐藏</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不隐藏</showvalue2>
<realvalue2>false</realvalue2>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>是否打印状态</name>
<showvalue1>打印状态</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>非打印状态</showvalue2>
<realvalue2>false</realvalue2>
</p4>
</param>
<function>SetRowHide1(起始行,结束行,是否隐藏，是否打印状态)</function>
<caption>设置指定行区域在显示或打印状态是否隐藏，SetRowHide将同时设置显示和打印两种状态行是否隐藏。</caption>
</act48>

<act49>
<type>0</type>
<sign>行列属性方法</sign>
<name>SetSelectWholeRow</name>
<vname>整行选中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否整行选中</name>
<showvalue1>整行选中</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不整行选中</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetSelectWholeRow(是否整行选中)</function>
<caption>设置点击表格时光标是否整行选中。</caption>
</act49>





<act50>
<type>0</type>
<sign>单元编辑方法</sign>
<name>ClearCell</name>
<vname>清除区域内容</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>ClearCell(起始行,起始列,结束行,结束列)</function>
<caption>清除区域之间单元的所有内容。</caption>
</act50>

<act51>
<type>0</type>
<sign>单元编辑方法</sign>
<name>ClearCellText</name>
<vname>清除区域文本内容</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>ClearCellText(起始行,起始列,结束行,结束列)</function>
<caption>清除区域之间单元的文本内容，其他的内容不清除。</caption>
</act51>

<act52>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertOnlyFormatRows</name>
<vname>插入格式行</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>插入行数</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参照起始行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参照结束行</name>
</p4>
</param>
<function>InsertOnlyFormatRows(指定行,插入行数,参照起始行,参照结束行)</function>
<caption>在指定行后面插入单元行，格式与指定区域相同，除了单元变量和单元文字以外，其余的格式包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act52>

<act53>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertOnlyFormatCols</name>
<vname>插入格式列</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>插入列数</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参照起始列</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参照结束列</name>
</p4>
</param>
<function>InsertOnlyFormatCols(指定列,插入列数,参照起始列,参照结束列)</function>
<caption>在指定列后面插入单元列，格式与指定区域相同，除了单元变量和单元文字以外，其余的格式包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act53>

<act54>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertNextRow</name>
<vname>插入空白行</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
</param>
<function>InsertNextRow(起始行,结束行)</function>
<caption>在“结束行”后面插入(“结束行”-“起始行”+1)数目的行。</caption>
</act54>

<act55>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertNextCol</name>
<vname>插入空白列</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
</param>
<function>InsertNextCol(起始列,结束列)</function>
<caption>在“结束列”后面插入(“结束列”-“起始列”+1)数目的列。</caption>
</act55>

<act56>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertFormatRows</name>
<vname>插入格式内容行</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>插入行数</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参照起始行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参照结束行</name>
</p4>
</param>
<function>InsertFormatRows(指定行,插入行数,参照起始行,参照结束行)</function>
<caption>在指定行后面插入单元行，格式内容与指定区域相同，除了单元变量以外，其余的格式和内容包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act56>

<act57>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertFormatCols</name>
<vname>插入格式内容列</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>插入列数</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参照起始列</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参照结束列</name>
</p4>
</param>
<function>InsertFormatCols(指定列,插入列数,参照起始列,参照结束列)</function>
<caption>在指定列后面插入单元列，格式内容与指定区域相同，除了单元变量以外，其余的格式和内容包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act57>

<act58>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertCell</name>
<vname>插入单元格</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>插入类型</name>
<showvalue1>原有单元下移</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>原有单元右移</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>InsertCell(起始行,起始列,结束行,结束列,插入类型)</function>
<caption>在(起始行,起始列)与(结束行,结束列)之间插入新的单元格。如果行列类型为true，则表示插入单元后，原有单元往下移，false表示插入单元后，原有单元往右移。</caption>
</act58>

<act59>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertBeforeRow</name>
<vname>前插行</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
</param>
<function>InsertBeforeRow(起始行,结束行)</function>
<caption>在“起始行”前插入(“结束行”-“起始行”+1)数目的单元行。</caption>
</act59>

<act60>
<type>0</type>
<sign>单元编辑方法</sign>
<name>InsertBeforeCol</name>
<vname>前插列</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
</param>
<function>InsertBeforeCol(起始列,结束列)</function>
<caption>在“起始列”前插入(“结束列”-“起始列”+1)数目的单元列。</caption>
</act60>

<act61>
<type>0</type>
<sign>单元组合方法</sign>
<name>CombiNation</name>
<vname>组合单元格</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>CombiNation(起始行,结束行,起始列,结束列)</function>
<caption>将指定区域的单元格组合。</caption>
</act61>

<act62>
<type>1</type>
<sign>单元组合方法</sign>
<name>IsCellCombiNation</name>
<vname>返回是否是组合单元格</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellCombiNation(行号,列号)</function>
<caption>返回对应行列的单元格是否已经组合。</caption>
</act62>

<act63>
<type>1</type>
<sign>单元组合方法</sign>
<name>IsSameCombiNationCell</name>
<vname>返回两个单元格是否组合</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>第一个行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>第一个列号</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>第二个行号</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>第二个列号</name>
</p4>
<p5>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p5>
</param>
<function>IsSameCombiNationCell(第一个行号,第一个列号,第二个行号,第二个列号)</function>
<caption>判断两个单元是否是同一个组合单元中的单元。如果返回true，则表示是同一组合单元中的单元，否则不是。</caption>
</act63>





<act64>
<type>0</type>
<sign>表格线方法</sign>
<name>ClearCellBorder</name>
<vname>清除框线</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>类型</name>
<showvalue1>所有表线</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>外框线</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>上表格线</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>下表格线</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>左表格线</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>右表格线</showvalue6>
<realvalue6>5</realvalue6>
<showvalue7>上下框线</showvalue7>
<realvalue7>6</realvalue7>
<showvalue8>左右框线</showvalue8>
<realvalue8>7</realvalue8>
<showvalue9>内框线</showvalue9>
<realvalue9>8</realvalue9>
<showvalue10>横框线</showvalue10>
<realvalue10>9</realvalue10>
</p5>
</param>
<function>ClearCellBorder(起始行,起始列,结束行,结束列,类型)</function>
<caption>清除区域中指定类型的框线。区域类型范围：0-10，具体请参考“ChinaExcel Report SDK 开发应用帮助”。</caption>
</act64>

<act65>
<type>0</type>
<sign>表格线方法</sign>
<name>DrawCellBorder</name>
<vname>设置框线</vname>
<param>
<count>7</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>画线类型</name>
<showvalue1>细线</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>中线</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>粗线</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>点线</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>虚线</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>点划线</showvalue6>
<realvalue6>5</realvalue6>
<showvalue7>点点划线</showvalue7>
<realvalue7>6</realvalue7>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>画线颜色</name>
</p6>
<p7>
<var>1</var>
<type>1</type>
<name>框线类型</name>
</p7>
</param>
<function>DrawCellBorder(起始行,起始列,结束行,结束列,画线类型,画线颜色,框线类型)</function>
<caption>在指定区域中设置框线。画线类型范围：0-6；框线类型范围：0-10，具体请参考“ChinaExcel Report SDK 开发应用帮助”。</caption>
</act65>





<act66>
<type>1</type>
<sign>绘制方法</sign>
<name>CreateDrawObject</name>
<vname>绘制对象（单元格）</vname>
<param>
<count>6</count>
<p1>
<var>1</var>
<type>3</type>
<name>绘制类型</name>
<showvalue1>画线</showvalue1>
<realvalue1>1</realvalue1>
<showvalue2>画矩形</showvalue2>
<realvalue2>2</realvalue2>
<showvalue3>圆角矩形</showvalue3>
<realvalue3>3</realvalue3>
<showvalue4>画椭圆</showvalue4>
<realvalue4>4</realvalue4>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p5>
<p6>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p6>
</param>
<function>CreateDrawObject(绘制类型,起始行,起始列,结束行,结束列)</function>
<caption>绘制指定类型的对象，并返回对象的句柄，句柄可以用在SetObjectLineColor1，SetObjectText等方法中。</caption>
</act66>

<act67>
<type>1</type>
<sign>绘制方法</sign>
<name>CreateDrawObject1</name>
<vname>绘制对象（坐标）</vname>
<param>
<count>6</count>
<p1>
<var>1</var>
<type>3</type>
<name>绘制类型</name>
<showvalue1>画线</showvalue1>
<realvalue1>1</realvalue1>
<showvalue2>画矩形</showvalue2>
<realvalue2>2</realvalue2>
<showvalue3>圆角矩形</showvalue3>
<realvalue3>3</realvalue3>
<showvalue4>画椭圆</showvalue4>
<realvalue4>4</realvalue4>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>左上角X坐标</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>左上角Y坐标</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>右下角X坐标</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>右下角Y坐标</name>
</p5>
<p6>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p6>
</param>
<function>CreateDrawObject1(绘制类型,左上角X坐标,左上角Y坐标,右下角X坐标,右下角Y坐标)</function>
<caption>绘制指定类型的对象，并返回对象的句柄，句柄可以用在SetObjectLineColor1，SetObjectText等方法中。</caption>
</act67>

<act68>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectLineColor1</name>
<vname>设置对象边框颜色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p2>
</param>
<function>SetObjectLineColor1(对象句柄,颜色值)</function>
<caption>设置指定对象的边框颜色，其中对象句柄由CreateDrawObject或CreateDrawObject1返回，颜色值可以直接输入数值，也可以由GetRGBValue或GetColor返回。</caption>
</act68>

<act69>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectFillColor1</name>
<vname>设置对象填充颜色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p2>
</param>
<function>SetObjectFillColor1(对象句柄,颜色值)</function>
<caption>设置指定对象的填充颜色，其中对象句柄由CreateDrawObject或CreateDrawObject1返回，颜色值可以直接输入数值，也可以由GetRGBValue或GetColor返回。</caption>
</act69>

<act70>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectIsFillColor</name>
<vname>设置对象是否填充</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>是否填充</name>
<showvalue1>填充</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不填充</showvalue2>
<realvalue2>false</realvalue2>
</p2>
</param>
<function>SetObjectIsFillColor(对象句柄,是否填充)</function>
<caption>设置指定对象的颜色是否填充。如果颜色不填充，则透明。其中对象句柄由CreateDrawObject或CreateDrawObject1返回。</caption>
</act70>

<act71>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectHasBorder</name>
<vname>设置对象是否显示边框</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>2</type>
<name>是否显示</name>
</p2>
</param>
<function>SetObjectHasBorder(对象句柄,是否显示)</function>
<caption>设置是否显示指定对象的边框。其中对象句柄由CreateDrawObject或CreateDrawObject1返回。</caption>
</act71>

<act72>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectTextColor</name>
<vname>设置对象文本颜色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p2>
</param>
<function>SetObjectTextColor(对象句柄,颜色值)</function>
<caption>设置指定对象的文本颜色。其中对象句柄由CreateDrawObject或CreateDrawObject1返回。</caption>
</act72>

<act73>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectProtect</name>
<vname>设置对象保护</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>是否保护</name>
<showvalue1>保护</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不保护</showvalue2>
<realvalue2>false</realvalue2>
</p2>
</param>
<function>SetObjectProtect(对象句柄,是否保护)</function>
<caption>设置指定对象是否保护。其中对象句柄由CreateDrawObject或CreateDrawObject1返回。</caption>
</act73>

<act74>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectText</name>
<vname>设置对象文本内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>文本内容</name>
</p2>
</param>
<function>SetObjectText(对象句柄,文本内容)</function>
<caption>设置指定对象的文本。其中对象句柄由CreateDrawObject或CreateDrawObject1返回。</caption>
</act74>






<act75>
<type>0</type>
<sign>图片方法</sign>
<name>CreateImageObject</name>
<vname>插入图片</vname>
<param>
<count>6</count>
<p1>
<var>1</var>
<type>3</type>
<name>插入类型</name>
<showvalue1>原始尺寸</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>指定大小</showvalue2>
<realvalue2>false</realvalue2>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>图片路径</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p6>
</param>
<function>CreateImageObject(插入类型,图片路径,起始行,起始列,结束行,结束列)</function>
<caption>插入图片对象，该对象浮于单元格上面，需要调用Refresh进行刷新。插入类型如果是true，则按照图片原始尺寸显示，如果false，则按照指定行列显示。在JScript中调用该方法时，文件路径需要双斜杠“\\”。</caption>
</act75>

<act76>
<type>0</type>
<sign>图片方法</sign>
<name>DeleteCellImage</name>
<vname>删除单元格内图片</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>DeleteCellImage(起始行,起始列,结束行,结束列)</function>
<caption>删除区域单元格内的图片，浮在单元格上面的图片不能用此方法删除。</caption>
</act76>

<act77>
<type>0</type>
<sign>图片方法</sign>
<name>ReadHttpImageFile</name>
<vname>插入WEB图片</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>0</type>
<name>图片路径</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>放置方式</name>
<showvalue1>放在单元格里</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>浮在单元格上</showvalue2>
<realvalue2>false</realvalue2>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>图片大小</name>
<showvalue1>原始尺寸</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>单元格大小</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>ReadHttpImageFile(图片路径,起始行,起始列,放置方式,图片大小)</function>
<caption>从WEB上读入图片文件，并把它放到报表的指定位置上，需要调用Refresh进行刷新，否则不会显示出来。其中放置方式为true表示放置到单元格里；false表示浮在单元格上；图片大小为true表示按原尺寸显示，false表示按单元格大小显示。</caption>
</act77>

<act78>
<type>0</type>
<sign>图片方法</sign>
<name>SetBackgroundImageSize</name>
<vname>改变背景图片大小</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>图片大小</name>
<showvalue1>原始尺寸</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>表格尺寸</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetBackgroundImageSize(图片大小)</function>
<caption>改变表格背景图片尺寸大小。图片大小为true表示按原尺寸显示，false表示按表格尺寸显示。</caption>
</act78>

<act79>
<type>0</type>
<sign>图片方法</sign>
<name>SetBackgroundImage</name>
<vname>设置背景图片</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>图片路径</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>图片大小</name>
<showvalue1>原始尺寸</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>表格尺寸</showvalue2>
<realvalue2>false</realvalue2>
</p2>
</param>
<function>SetBackgroundImage(图片路径,图片大小)</function>
<caption>设置表格背景图片。图片大小为true表示按原尺寸显示，false表示按表格尺寸显示。</caption>
</act79>

<act80>
<type>0</type>
<sign>图片方法</sign>
<name>SetCellImage</name>
<vname>插入单元格图片</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>图片路径</name>
</p3>
<p4>
<var>1</var>
<type>2</type>
<name>图片大小</name>
</p4>
</param>
<function>SetCellImage(行号,列号,图片路径,图片大小)</function>
<caption>在指定单元格内插入图片，需要调用Refresh进行刷新。图片大小为true表示按原尺寸显示，false表示按图片原有比例缩放在单元格中显示。</caption>
</act80>

<act81>
<type>0</type>
<sign>图片方法</sign>
<name>SetCellImageSize</name>
<vname>改变单元格图片大小</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>显示类型</name>
<showvalue1>原始尺寸</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>表格大小</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>SetCellImageSize(行号,列号,显示类型)</function>
<caption>设置指定单元格内图片的尺寸，需要调用Refresh进行刷新，才能看到设置后的变化。显示类型为0，表示按单元格大小显示；为1，表示按图片原始尺寸显示；为2，表示按图片原有比例缩放在单元格中显示。</caption>
</act81>






<act82>
<type>1</type>
<sign>变量名方法</sign>
<name>FindCellVarNameRow</name>
<vname>查找变量名所在行</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>单元变量名</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>FindCellVarNameRow(变量名)</function>
<caption>查找单元变量名所在的行，并且返回变量名所在的行值。如果返回值为0，则表示没有找到该变量名对应的行。</caption>
</act82>

<act83>
<type>1</type>
<sign>变量名方法</sign>
<name>FindCellVarNameCol</name>
<vname>查找变量名所在列</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>单元变量名</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>FindCellVarNameCol(变量名)</function>
<caption>查找单元变量名所在的列，并且返回变量名所在的列值。如果返回值为0，则表示没有找到该变量名对应的列。</caption>
</act83>

<act84>
<type>1</type>
<sign>变量名方法</sign>
<name>GetCellVarName</name>
<vname>获取单元格变量名</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellVarName(行号,列号)</function>
<caption>获取指定单元格的变量名。</caption>
</act84>

<act85>
<type>1</type>
<sign>变量名方法</sign>
<name>GetCellValUseVarName</name>
<vname>返回变量名所在单元内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>变量名</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetCellValUseVarName(变量名)</function>
<caption>返回指定单元变量名所在单元的单元内容。</caption>
</act85>

<act86>
<type>0</type>
<sign>变量名方法</sign>
<name>SetCellVarName</name>
<vname>设置单元变量名</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>变量名</name>
</p3>
</param>
<function>SetCellVarName(行号,列号,变量名)</function>
<caption>设置指定单元格的变量名。如果变量名为空，则清除当前单元存在的变量名。</caption>
</act86>

<act87>
<type>0</type>
<sign>变量名方法</sign>
<name>SetCellValUseVarName</name>
<vname>设置变量名所在单元内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>变量名</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>单元内容</name>
</p2>
</param>
<function>SetCellValUseVarName(变量名,单元内容)</function>
<caption>设置指定单元变量名所在的单元的单元内容，需要调用Refresh进行整表的刷新。</caption>
</act87>






<act88>
<type>0</type>
<sign>其他方法</sign>
<name>ShowMessageBox</name>
<vname>弹出信息框</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>0</type>
<name>提示信息</name>
</p1>
</param>
<function>ShowMessageBox(提示信息)</function>
<caption>弹出提示信息框。</caption>
</act88>

<act89>
<type>0</type>
<sign>其他方法</sign>
<name>OpenURL</name>
<vname>打开网页</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>网址</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>打开方式</name>
<showvalue1>新网页中打开</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>原网页中打开</showvalue2>
<realvalue2>false</realvalue2>
</p2>
</param>
<function>OpenURL(网址,打开方式)</function>
<caption>在IE窗口中打开一个URL链接。</caption>
</act89>

<act90>
<type>1</type>
<sign>其他方法</sign>
<name>FindCriteriaString</name>
<vname>查找字符串</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>0</type>
<name>源字符串</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>匹配字符串</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>FindCriteriaString(源字符串,匹配字符串)</function>
<caption>从源字符串中查找匹配字符串，如果找到就返回true，否则就返回false。匹配字符串的形式可以为数字、表达式或文本。例如，条件可以表示为 "??ls"、"32"、">32" 、"*apples"等。</caption>
</act90>





<act91>
<type>0</type>
<sign>数据录入方法</sign>
<name>AddNewRecord</name>
<vname>增加空白记录</vname>
<param>
<count>0</count>
</param>
<function>AddNewRecord()</function>
<caption>增加空白记录，进入录入状态。</caption>
</act91>

<act92>
<type>0</type>
<sign>数据录入方法</sign>
<name>SetSaveFieldDataToDB</name>
<vname>设置开启数据录入</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>2</type>
<name>是否开启</name>
</p1>
</param>
<function>SetSaveFieldDataToDB(是否开启)</function>
<caption>设置是否开启数据录入功能。</caption>
</act92>

<act93>
<type>1</type>
<sign>数据录入方法</sign>
<name>IsSaveFieldDataToDB</name>
<vname>返回是否开启数据录入</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsSaveFieldDataToDB()</function>
<caption>返回是否开启数据录入功能，true表示开启，false表示未开启。</caption>
</act93>




<act94>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>AddRowPageBreak</name>
<vname>设置强制分页</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定行</name>
</p1>
</param>
<function>AddRowPageBreak(指定行)</function>
<caption>添加行分页符，即在指定的行强制进行分页。</caption>
</act94>

<act95>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>DeleteRowPageBreak</name>
<vname>取消强制分页</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定行</name>
</p1>
</param>
<function>DeleteRowPageBreak(指定行)</function>
<caption>删除行分页符，取消在指定的行开始强制分页。</caption>
</act95>

<act96>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetMaxPrintPageNumber</name>
<vname>返回最大打印页号</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetMaxPrintPageNumber()</function>
<caption>返回当前报表的最大打印页号。</caption>
</act96>

<act97>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetOffsetPrintPageNumber</name>
<vname>返回打印页偏移值</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetOffsetPrintPageNumber()</function>
<caption>返回打印页号偏移值。</caption>
</act97>

<act98>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetOnePrintPageDetailZoneRows</name>
<vname>返回每页打印行数</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetOnePrintPageDetailZoneRows()</function>
<caption>返回每页打印的行数，不包括表头、表尾页脚、页前脚的行数。</caption>
</act98>

<act99>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetPrintFooterTitle</name>
<vname>返回页脚内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>3</type>
<name>类型</name>
<showvalue1>返回全部</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>返回左边内容</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>返回中间内容</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>返回右边内容</showvalue4>
<realvalue4>3</realvalue4>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetPrintFooterTitle(类型)</function>
<caption>返回打印页的页脚内容。</caption>
</act99>

<act100>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetPrintHeaderTitle</name>
<vname>返回页眉内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>3</type>
<name>类型</name>
<showvalue1>返回全部</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>返回左边内容</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>返回中间内容</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>返回右边内容</showvalue4>
<realvalue4>3</realvalue4>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetPrintHeaderTitle(类型)</function>
<caption>返回打印页的页眉内容。</caption>
</act100>

<act101>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>GetPrintPageNumber</name>
<vname>返回指定单元格的打印页号</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetPrintPageNumber(行号,列号)</function>
<caption>返回指定行列所在的打印页号，如果指定的行和列不在报表的行列范围，则返回0。</caption>
</act101>

<act102>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetCellCanPrint</name>
<vname>设置指定区域打印时是否显示</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>是否显示</name>
<showvalue1>打印时显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>打印时不显示</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellCanPrint(起始行,起始列,结束行,结束列,是否显示)</function>
<caption>设置对应区域的单元格在打印时是否显示。默认所有的单元格在打印时会显示。如果要不显示某些单元格，则需要调用此函数。</caption>
</act102>

<act103>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetCellNotPrintText</name>
<vname>设置指定区域不打印文字</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>是否打印</name>
<showvalue1>不打印文字</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>打印所有内容</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellNotPrintText(起始行,起始列,结束行,结束列,是否打印)</function>
<caption>设置对应区域的单元格在打印时是否不打印文字。默认所有的单元格在打印时会打印所有的内容。如果要打印某些单元格的背景、线形，但不打印文字，则需要调用此函数。</caption>
</act103>

<act104>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetCellOnlyPrintShowText</name>
<vname>设置指定区域文字显示方式</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>显示方式</name>
<showvalue1>只在打印时显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>打印不打印都显示</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellOnlyPrintShowText(起始行,起始列,结束行,结束列,显示方式)</function>
<caption>设置对应区域的单元格文字是否只在打印时显示。默认所有单元格的文字在打印和不打印时都会显示。</caption>
</act104>

<act105>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetCellOnlyPrintTextLine</name>
<vname>设置指定区域打印格式</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>打印格式</name>
<showvalue1>只打印文字和表格线</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>打印所有内容</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellOnlyPrintTextLine(起始行,起始列,结束行,结束列,格式)</function>
<caption>设置对应区域的单元格在打印时是否只打印文字和表格线。默认所有的单元格在打印时会打印所有的内容。如果要不打印某些单元格的背景，则需要调用此函数。</caption>
</act105>

<act106>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetCellOnlyPrintText</name>
<vname>设置指定区域只打印文字</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>打印类型</name>
<showvalue1>只打印文字</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>打印所有内容</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellOnlyPrintText(起始行,起始列,结束行,结束列,打印类型)</function>
<caption>设置对应区域的单元格在打印时是否只打印文字。默认所有的单元格在打印时会打印所有的内容。如果要不打印某些单元格的背景、线形，则需要调用此函数。</caption>
</act106>

<act107>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetOffsetPrintPageNumber</name>
<vname>设置打印页号偏移</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>偏移量</name>
</p1>
</param>
<function>SetOffsetPrintPageNumber(偏移量)</function>
<caption>设置打印页号偏移，如设置偏移页号为1，则页号从第2页开始。</caption>
</act107>

<act108>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetOnePrintPageDetailZoneRows</name>
<vname>设置每页打印行数</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>行数</name>
</p1>
</param>
<function>SetOnePrintPageDetailZoneRows(行数)</function>
<caption>设置每页打印的行数，不包括表头、表尾页脚、页前脚的行数。</caption>
</act108>

<act109>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintFooterTitle</name>
<vname>设置页脚</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>0</type>
<name>页脚左值</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>页脚中值</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>页脚右值</name>
</p3>
</param>
<function>SetPrintFooterTitle(页脚左值,页脚中值,页脚右值)</function>
<caption>设置页脚。可以显示多行页脚，行的分隔使用&at;&dt;可以使用转义字符，具体参考“SDK开发应用帮助”。</caption>
</act109>

<act110>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintHeaderTitle</name>
<vname>设置页眉</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>0</type>
<name>页眉左值</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>页眉中值</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>页眉右值</name>
</p3>
</param>
<function>SetPrintHeaderTitle(页眉左值,页眉中值,页眉右值)</function>
<caption>设置页眉。可以显示多行页眉，行的分隔使用&at;&dt;可以使用转义字符，具体参考“SDK开发应用帮助”。</caption>
</act110>

<act111>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintFormBackground</name>
<vname>设置是否打印背景色/背景图片</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否打印</name>
<showvalue1>打印</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不打印</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetPrintFormBackground(是否打印)</function>
<caption>设置是否打印表格背景色或背景图片。</caption>
</act111>

<act112>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintPageHorzCenter</name>
<vname>设置报表打印时是否水平居中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否居中</name>
<showvalue1>居中</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不居中</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetPrintPageHorzCenter(是否居中)</function>
<caption>设置当前报表打印时是否页面水平居中打印,如果true则表示是,false表示不居中。报表缺省的时候页面不水平居中。</caption>
</act112>

<act113>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintPageVertCenter</name>
<vname>设置报表打印时是否垂直居中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否居中</name>
<showvalue1>居中</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不居中</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetPrintPageVertCenter(是否居中)</function>
<caption>设置当前报表打印时是否页面垂直居中打印,如果true则表示是,false表示不居中。报表缺省的时候页面不垂直居中。</caption>
</act113>

<act114>
<type>0</type>
<sign>打印及打印预览方法</sign>
<name>SetPrintPage</name>
<vname>设置打印起始页结束页</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始页</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束页</name>
</p2>
</param>
<function>SetPrintPage(起始页,结束页)</function>
<caption>设置要打印的起始页和结束页。默认的时候，调用PrintFile方法将打印所有的页。调用本方法之后，将打印起始页开始到结束页之间的页。可以重复调用SetPrintPage、PrintFile来打印不同的页。具体请参考“SDK开发应用帮助”。</caption>
</act114>

<act115>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>IsCellOnlyPrintShowText</name>
<vname>返回单元格文字是否只在打印时显示</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellOnlyPrintShowText(行号,列号)</function>
<caption>返回对应行列的单元格是否只在打印时显示单元格中的文字。</caption>
</act115>

<act116>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>IsCellOnlyPrintTextLine</name>
<vname>返回单元格是否只打印文字和表格线</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellOnlyPrintTextLine(行号,列号)</function>
<caption>返回对应行列的单元格是否在打印时只打印单元中的文字和表格线。</caption>
</act116>

<act117>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>IsCellOnlyPrintText</name>
<vname>返回单元格是否只打印文字</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCellOnlyPrintText(行号,列号)</function>
<caption>返回对应行列的单元格是否在打印时只打印单元中的文字。</caption>
</act117>

<act118>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>IsPrintPageHorzCenter</name>
<vname>返回打印时页面是否水平居中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsPrintPageHorzCenter()</function>
<caption>回当前报表打印时是否页面水平居中打印,如果true则表示居中,false表示不居中。缺省的时候页面不水平居中。</caption>
</act118>

<act119>
<type>1</type>
<sign>打印及打印预览方法</sign>
<name>IsPrintPageVertCenter</name>
<vname>返回打印时页面是否垂直居中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsPrintPageVertCenter()</function>
<caption>回当前报表打印时是否页面垂直居中打印,如果true则表示居中,false表示不居中。缺省的时候页面不垂直居中。</caption>
</act119>

<act120>
<type>0</type>
<sign>菜单方法</sign>
<name>DeleteAllPopupMenu</name>
<vname>删除所有弹出菜单</vname>
<param>
<count>0</count>
</param>
<function>DeleteAllPopupMenu()</function>
<caption>删除所有的弹出菜单。</caption>
</act120>

<act121>
<type>0</type>
<sign>菜单方法</sign>
<name>AddPopupMenu</name>
<vname>设置新增右键菜单项</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>0</type>
<name>显示项名称</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>VBSCRIPT脚本</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>菜单类型</name>
<showvalue1>普通菜单</showvalue1>
<realvalue1>1</realvalue1>
<showvalue2>Check菜单</showvalue2>
<realvalue2>2</realvalue2>
<showvalue3>分隔符菜单</showvalue3>
<realvalue3>3</realvalue3>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>复选标记</name>
<showvalue1>显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示</showvalue2>
<realvalue2>false</realvalue2>
</p4>
</param>
<function>AddPopupMenu(显示项名称,VBSCRIPT脚本,菜单类型,是否显示复选标记)</function>
<caption>在右键弹出菜单中增加POPUP菜单选项（注：第4个参数只有当“菜单类型”为Check菜单时才有效）。此功能是在原有菜单之后新增菜单，如果想在原菜单之前插入新增菜单，可以参考InsertPopupMenu方法。</caption>
</act121>

<act122>
<type>0</type>
<sign>菜单方法</sign>
<name>DeletePopupMenu</name>
<vname>删除指定菜单项</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>0</type>
<name>显示项名称</name>
</p1>
</param>
<function>DeletePopupMenu(显示项名称)</function>
<caption>删除指定显示名称项的菜单项。</caption>
</act122>

<act123>
<type>1</type>
<sign>菜单方法</sign>
<name>GetShowPopupMenu</name>
<vname>返回是否显示弹出菜单</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetShowPopupMenu()</function>
<caption>返回系统是否显示弹出菜单。</caption>
</act123>

<act124>
<type>0</type>
<sign>菜单方法</sign>
<name>InsertPopupMenu</name>
<vname>设置插入右键菜单项</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>指定项（0）</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>显示项名称</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>VBSCRIPT脚本</name>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>菜单类型</name>
<showvalue1>普通菜单</showvalue1>
<realvalue1>1</realvalue1>
<showvalue2>Check菜单</showvalue2>
<realvalue2>2</realvalue2>
<showvalue3>分隔符菜单</showvalue3>
<realvalue3>3</realvalue3>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>复选标记</name>
<showvalue1>显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>AddPopupMenu(指定项,显示项名称,VBSCRIPT脚本,菜单类型,是否显示复选标记)</function>
<caption>在右键弹出菜单中插入POPUP菜单选项（注：第1个参数“指定项”从0开始；第5个参数只有当“菜单类型”为Check菜单时才有效）。</caption>
</act124>

<act125>
<type>0</type>
<sign>菜单方法</sign>
<name>SetShowPopupMenu</name>
<vname>设置是否显示弹出菜单</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否显示</name>
<showvalue1>显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetShowPopupMenu(是否显示)</function>
<caption>设置是否显示弹出菜单。</caption>
</act125>

<act126>
<type>0</type>
<sign>菜单方法</sign>
<name>SetShowTabPopupMenu</name>
<vname>设置是否显示tab区域弹出菜单</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否显示</name>
<showvalue1>显示</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetShowTabPopupMenu(是否显示)</function>
<caption>设置是否显示tab区域的弹出菜单。</caption>
</act126>




<act127>
<type>0</type>
<sign>财务方法</sign>
<name>SetCellFinanceHeadType</name>
<vname>设置财务表头</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>SetCellFinanceHeadType(起始行,起始列,结束行,结束列)</function>
<caption>设置指定区域的单元格为财务表头。</caption>
</act127>

<act128>
<type>0</type>
<sign>财务方法</sign>
<name>SetCellFinanceType</name>
<vname>设置财务表览</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>SetCellFinanceType(起始行,起始列,结束行,结束列)</function>
<caption>设置指定区域的单元格为财务表览。</caption>
</act128>


<act129>
<type>1</type>
<sign>表格线方法</sign>
<name>GetCellBorderColor</name>
<vname>返回单元格边框颜色</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>边框参数</name>
<showvalue1>左边框</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>上边框</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>右边框</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>下边框</showvalue4>
<realvalue4>3</realvalue4>
</p3>
<p4>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p4>
</param>
<function>GetCellBorderColor(行号,列号,边框参数)</function>
<caption>返回指定单元的画线颜色，只有当指定边框线存在时返回的画线颜色才有意义。</caption>
</act129>

<act130>
<type>1</type>
<sign>表格线方法</sign>
<name>GetCellBorder</name>
<vname>返回单元格边框类型</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>边框参数</name>
<showvalue1>左边框</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>上边框</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>右边框</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>下边框</showvalue4>
<realvalue4>3</realvalue4>
</p3>
<p4>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p4>
</param>
<function>GetCellBorder(行号,列号,边框参数)</function>
<caption>返回指定单元的画线类型，返回值包括 -1(无线)、0(细线)、1(中线)、2(粗线)、3(点线)、4(虚线)、5(点划线)、6(点点划线)。</caption>
</act130>





<act131>
<type>0</type>
<sign>单元格方法</sign>
<name>ClearCellStatDefine</name>
<vname>清除单元格字段</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>ClearCellStatDefine(起始行,起始列,结束行,结束列)</function>
<caption>清除指定区域的单元统计定义。</caption>
</act131>

<act132>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellBkColor</name>
<vname>返回单元格背景色</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellBkColor(行号,列号)</function>
<caption>返回指定单元背景颜色。</caption>
</act132>

<act133>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellBkColorEffect</name>
<vname>返回单元格特殊背景色效果</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellBkColorEffect(行号,列号)</function>
<caption>返回指定单元格特殊背景色效果。返回值范围：0-15，具体效果请参考“SDK开发应用帮助”。</caption>
</act133>

<act134>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellBkColorGranularity</name>
<vname>返回单元格特殊背景色粒度</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellBkColorGranularity(行号,列号)</function>
<caption>返回指定单元格特殊背景色粒度。返回值的范围是 0-255。</caption>
</act134>

<act135>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellDigitPoint</name>
<vname>返回单元格小数位数</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellDigitPoint(行号,列号)</function>
<caption>返回指定单元小数位数。</caption>
</act135>

<act136>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellDigitShowStyle</name>
<vname>返回单元格显示格式</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellDigitShowStyle(行号,列号)</function>
<caption>返回指定单元格数值的显示格式，具体返回值请参考“SDK开发应用帮助”。</caption>
</act136>

<act137>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellEndBkColor</name>
<vname>返回特殊背景色结束颜色值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellEndBkColor(行号,列号)</function>
<caption>返回设置了特殊效果背景颜色单元的结束背景颜色值。</caption>
</act137>

<act138>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellMidBkColor</name>
<vname>返回特殊背景色中间颜色值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellMidBkColor(行号,列号)</function>
<caption>返回设置了特殊效果背景颜色单元的中间背景颜色值。</caption>
</act138>

<act139>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellStartBkColor</name>
<vname>返回特殊背景色起始颜色值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellStartBkColor(行号,列号)</function>
<caption>返回设置了特殊效果背景颜色单元的起始背景颜色值。</caption>
</act139>

<act140>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellSlashColor</name>
<vname>返回单元格斜线颜色</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellSlashColor(行号,列号)</function>
<caption>返回指定单元斜线颜色。</caption>
</act140>

<act141>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellSlashStyle</name>
<vname>返回单元格斜线类型</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellSlashStyle(行号,列号)</function>
<caption>返回指定单元斜线类型。返回值包括 0(无斜线)、1(对角线)、2(上角双斜线)、3(下角双斜线)、4(横线)、5(竖线)。</caption>
</act141>

<act142>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellStatDefine</name>
<vname>返回单元格统计定义</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellStatDefine(行号,列号)</function>
<caption>返回指定单元的统计定义。</caption>
</act142>

<act143>
<type>1</type>
<sign>单元格方法</sign>
<name>GetCellTextColor</name>
<vname>返回单元格文字颜色</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellTextColor(行号,列号)</function>
<caption>返回指定单元的文字字体颜色。</caption>
</act143>

<act144>
<type>1</type>
<sign>单元格方法</sign>
<name>GetFontSize</name>
<vname>返回单元格文字大小</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetFontSize(行号,列号)</function>
<caption>返回指定单元的文字字体大小。</caption>
</act144>

<act145>
<type>1</type>
<sign>单元格方法</sign>
<name>IsCombinationCellTransparent</name>
<vname>返回组合单元背景是否透明</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsCombinationCellTransparent(行号,列号)</function>
<caption>返回组合单元背景是否透明。这个功能主要是用于设置了背景图片时，在单元组合后，还可以看到背景图片的功能。</caption>
</act145>

<act146>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellAutoWrap</name>
<vname>设置指定区域文字自动换行</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>2</type>
<name>自动换行</name>
</p5>
</param>
<function>SetCellAutoWrap(起始行,起始列,结束行,结束列,自动换行)</function>
<caption>设置指定区域的单元格文本自动换行。</caption>
</act146>

<act147>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellColSpan</name>
<vname>设置单元格文字宽度</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>宽度</name>
</p5>
</param>
<function>SetCellColSpan(起始行,起始列,结束行,结束列,宽度)</function>
<caption>设置单元格内每个字的宽度。范围从0到255，缺省为0时是当前单元的单元字体宽度。</caption>
</act147>

<act148>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellHtmlType</name>
<vname>设置单元格按HTML展现</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>展现方式</name>
<showvalue1>按HTML展现</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不按HTML展现</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellHtmlType(起始行,起始列,结束行,结束列,展现方式)</function>
<caption>设置指定单元区域的单元内容按html展现，如果按html展现，则输入的内容需要是html格式的内容。</caption>
</act148>

<act149>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellPopupTip</name>
<vname>设置单元格提示信息</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>0</type>
<name>提示内容</name>
</p5>
</param>
<function>SetCellPopupTip(起始行,起始列,结束行,结束列,提示内容)</function>
<caption>对指定区域的单元设置自动弹出提示。设置自动弹出提示的单元的右上角将出现一个红色的小三角形，点击该单元会自动弹出提示。</caption>
</act149>

<act150>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellShrinkFontSizeToFitCell</name>
<vname>设置单元文字缩小字体填充</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>填充方式</name>
<showvalue1>缩小</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不缩小</showvalue2>
<realvalue2>false</realvalue2>
</p5>
</param>
<function>SetCellShrinkFontSizeToFitCell(起始行,起始列,结束行,结束列,填充方式)</function>
<caption>设置单元文字自动缩小字体填充。如果按当前单元设置的字体大小，文字不能全部显示在单元格中，则设置了此功能的单元格中的文字会自动缩小字体刚好填充到单元格中。</caption>
</act150>

<act151>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellDigitShowStyle</name>
<vname>设置单元数值显示格式</vname>
<param>
<count>6</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>显示格式</name>
<showvalue1>普通格式</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>数值格式</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>人民币格式</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>美元格式</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>百分比格式</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>千分位格式</showvalue6>
<realvalue6>5</realvalue6>
<showvalue7>欧元格式</showvalue7>
<realvalue7>6</realvalue7>
<showvalue8>财务大写</showvalue8>
<realvalue8>7</realvalue8>
<showvalue9>文本格式</showvalue9>
<realvalue9>8</realvalue9>
<showvalue10>财务套打大写</showvalue10>
<realvalue10>11</realvalue10>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>小数位数</name>
</p6>
</param>
<function>SetCellDigitShowStyle(起始行,起始列,结束行,结束列,显示格式,小数位数)</function>
<caption>设置指定区域单元数值的显示格式。</caption>
</act151>

<act152>
<type>0</type>
<sign>单元格方法</sign>
<name>SetCellSlashStyle</name>
<vname>设置斜线格式</vname>
<param>
<count>6</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>3</type>
<name>斜线类型</name>
<showvalue1>无斜线</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>对角线</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>上角双斜线</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>下角双斜线</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>横线</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>竖线</showvalue6>
<realvalue6>5</realvalue6>
<showvalue7>动态竖线</showvalue7>
<realvalue7>6</realvalue7>
<showvalue8>动态横线</showvalue8>
<realvalue8>7</realvalue8>
<showvalue9>反对角线</showvalue9>
<realvalue9>8</realvalue9>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>斜线颜色</name>
</p6>
</param>
<function>SetCellSlashStyle(起始行,起始列,结束行,结束列,斜线类型,斜线颜色)</function>
<caption>设置指定区域斜线类型和颜色。单元文字用分隔符|来分隔文字的显示。</caption>
</act152>






<act153>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetCellCheckBoxValue</name>
<vname>返回单选框是否被选中</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellCheckBoxValue(行号,列号)</function>
<caption>返回单选框是否被选中，如果选中，则返回true，否则返回false。如果该单元不是单选框控件类型，则始终返回false。</caption>
</act153>

<act154>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetCellComboSelectedActualValue</name>
<vname>返回下拉框选中的实际值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellComboSelectedActualValue(行号,列号)</function>
<caption>返回单元控件类型是下拉框的单元格中下拉框当前选中的显示值对应的实际值。如果要返回下拉框的单元格中下拉框当前选中显示值，则使用GetCellComboSelectedValue方法。</caption>
</act154>

<act155>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetCellComboSelectedValue</name>
<vname>返回下拉框选中的显示值</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellComboSelectedValue(行号,列号)</function>
<caption>返回单元控件类型是下拉框的单元格中下拉框当前选中的值。如果该单元格为不是下拉框，则返回空。</caption>
</act155>

<act156>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetCellType</name>
<vname>返回单元控件类型</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellType(行号,列号)</function>
<caption>返回指定单元的控件类型。具体返回值请参考“SDK开发应用帮助”。</caption>
</act156>

<act157>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetCellURL</name>
<vname>返回单元URL内容</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellURL(行号,列号)</function>
<caption>返回指定超级链接类型单元格URL的内容。如果该单元格为空或不是超级链接类型的单元格，则返回空。</caption>
</act157>

<act158>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellCheckBoxCanNotEditText</name>
<vname>设置单选框文字能否编辑</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>能否编辑</name>
<showvalue1>不能编辑</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>可以编辑</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>SetCellCheckBoxCanNotEditText(行号,列号,能否编辑)</function>
<caption>设置单选框单元中的文字是否能够编辑。</caption>
</act158>

<act159>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellCheckBoxType</name>
<vname>设置单选框</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
</param>
<function>SetCellCheckBoxType(行号,列号)</function>
<caption>设置指定单元为单选框类型。</caption>
</act159>

<act160>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellCheckBoxValue</name>
<vname>设置单选框是否被选中</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>2</type>
<name>是否选中</name>
</p3>
</param>
<function>SetCellCheckBoxValue(行号,列号)</function>
<caption>设置单选框是否被选中。如果该单元不是单选框控件类型，则自动会设置为单选框类型。</caption>
</act160>

<act161>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellComboType</name>
<vname>设置下拉框</vname>
<param>
<count>5</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>能否输入</name>
<showvalue1>可以输入新的文字</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不能输入，只能选择</showvalue2>
<realvalue2>false</realvalue2>
</p3>
<p4>
<var>1</var>
<type>3</type>
<name>显示箭头</name>
<showvalue1>显示下拉框箭头</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示下拉框箭头</showvalue2>
<realvalue2>false</realvalue2>
</p4>
<p5>
<var>1</var>
<type>0</type>
<name>显示文本</name>
</p5>
</param>
<function>SetCellComboType(行号,列号,能否输入,显示箭头,显示文本)</function>
<caption>设置指定单元为下拉框类型。多行显示文本以;分隔，如下拉框中有“测试1”、“测试2”两项，则表示为“测试1;测试2”。</caption>
</act161>

<act162>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellDateTimeType</name>
<vname>设置日期时间类型</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>类型</name>
<showvalue1>长时间格式(2010年10月20日)</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>短时间格式(2010-10-20)</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>时间类型(11:59:59)</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>日期时间格式(2010-10-20 10:30)</showvalue4>
<realvalue4>3</realvalue4>
</p3>
<p4>
<var>1</var>
<type>0</type>
<name>显示内容</name>
</p4>
</param>
<function>SetCellDateTimeType(行号,列号,类型,显示内容)</function>
<caption>设置指定单元为日期时间类型。第4个参数“显示内容”如果为空，则用原单元值，如果原单元值为空，则用当前日期或时间。</caption>
</act162>

<act163>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellLargeTextType</name>
<vname>设置大文本格式</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>列号</name>
</p3>
</param>
<function>SetCellLargeTextType(起始行,结束行,列号)</function>
<caption>对起始行到结束行的指定单元列设置为大文本控件类型。</caption>
</act163>

<act164>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellURLOpenNewWindow</name>
<vname>设置超级链接是否在新窗体中打开</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>打开方式</name>
<showvalue1>在新窗体中打开</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>在原窗体中打开</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>SetCellURLOpenNewWindow(行号,列号,打开方式)</function>
<caption>设置指定超级链接控件类型的单元是否在新的IE窗口打开。</caption>
</act164>

<act165>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetCellURLType</name>
<vname>设置超级链接</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>0</type>
<name>链接内容</name>
</p3>
</param>
<function>SetCellURLType(行号,列号,链接内容)</function>
<caption>设置指定超级链接控件类型的单元是否在新的IE窗口打开。</caption>
</act165>

<act166>
<type>0</type>
<sign>单元控件方法</sign>
<name>SetRowType</name>
<vname>设置行类型</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>行类型</name>
<showvalue1>普通行</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>页眉</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>报表头</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>行头</showvalue4>
<realvalue4>3</realvalue4>
<showvalue5>页前脚</showvalue5>
<realvalue5>4</realvalue5>
<showvalue6>页脚</showvalue6>
<realvalue6>5</realvalue6>
</p3>
</param>
<function>SetRowType(起始行,结束行,行类型)</function>
<caption>设置指定行区域的类型。</caption>
</act166>

<act167>
<type>1</type>
<sign>单元控件方法</sign>
<name>GetRowType</name>
<vname>返回指定行的类型</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetRowType(行号)</function>
<caption>返回指定行的类型。返回值包括：0(普通行)，1(页眉)，2(报表头)，3(行头)，4(页前脚)，5(页脚)。</caption>
</act167>





<act168>
<type>0</type>
<sign>单元编辑方法</sign>
<name>CopyColCellFormat</name>
<vname>设置拷贝格式列</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参考起始列</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参考结束列</name>
</p4>
</param>
<function>CopyColCellFormat(起始列,结束列,参考起始列,参考结束列)</function>
<caption>把参考起始列至参考结束列的内容拷贝到指定区域，除了单元变量以外，其余的格式包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act168>

<act169>
<type>0</type>
<sign>单元编辑方法</sign>
<name>CopyRowCellFormat</name>
<vname>设置拷贝格式行</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>参考起始行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>参考结束行</name>
</p4>
</param>
<function>CopyRowCellFormat(起始行,结束行,参考起始行,参考结束行)</function>
<caption>把参考起始行至参考结束行的内容拷贝到指定区域，除了单元变量以外，其余的格式包括组合的属性、用户自定义数值、字符串值等全部拷贝过去。</caption>
</act169>

<act170>
<type>0</type>
<sign>单元编辑方法</sign>
<name>CopyRegionCell</name>
<vname>设置区域拷贝</vname>
<param>
<count>10</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>复制起始行</name>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>复制起始列</name>
</p6>
<p7>
<var>1</var>
<type>1</type>
<name>复制结束行</name>
</p7>
<p8>
<var>1</var>
<type>1</type>
<name>复制结束列</name>
</p8>
<p9>
<var>1</var>
<type>3</type>
<name>单元格内容</name>
<showvalue1>复制单元格内容</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不复制单元格内容</showvalue2>
<realvalue2>false</realvalue2>
</p9>
<p10>
<var>1</var>
<type>3</type>
<name>自定义内容</name>
<showvalue1>复制自定义内容</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不复制自定义内容</showvalue2>
<realvalue2>false</realvalue2>
</p10>
</param>
<function>CopyRegionCell(起始行,起始列,结束行,结束列,复制起始行,复制起始列,复制结束行,复制结束列,单元格内容,自定义内容)</function>
<caption>把指定区域的单元格内容复制到相应的另一个指定区域中。</caption>
</act170>

<act171>
<type>0</type>
<sign>单元编辑方法</sign>
<name>CutRegionCell</name>
<vname>设置区域剪切</vname>
<param>
<count>10</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
<p5>
<var>1</var>
<type>1</type>
<name>剪切起始行</name>
</p5>
<p6>
<var>1</var>
<type>1</type>
<name>剪切起始列</name>
</p6>
<p7>
<var>1</var>
<type>1</type>
<name>剪切结束行</name>
</p7>
<p8>
<var>1</var>
<type>1</type>
<name>剪切结束列</name>
</p8>
<p9>
<var>1</var>
<type>3</type>
<name>单元格内容</name>
<showvalue1>剪切单元格内容</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不剪切单元格内容</showvalue2>
<realvalue2>false</realvalue2>
</p9>
<p10>
<var>1</var>
<type>3</type>
<name>自定义内容</name>
<showvalue1>剪切自定义内容</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不剪切自定义内容</showvalue2>
<realvalue2>false</realvalue2>
</p10>
</param>
<function>CutRegionCell(起始行,起始列,结束行,结束列,剪切起始行,剪切起始列,剪切结束行,剪切结束列,单元格内容,自定义内容)</function>
<caption>把指定区域的单元格内容剪切到相应的另一个指定区域中。</caption>
</act171>

<act172>
<type>0</type>
<sign>单元编辑方法</sign>
<name>DeleteCol</name>
<vname>删除列</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
</param>
<function>DeleteCol(起始列,结束列)</function>
<caption>删除指定区域的列。</caption>
</act172>

<act173>
<type>0</type>
<sign>单元编辑方法</sign>
<name>DeleteRow</name>
<vname>删除行</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
</param>
<function>DeleteRow(起始行,结束行)</function>
<caption>删除指定区域的行。</caption>
</act173>





<act174>
<type>0</type>
<sign>行列属性方法</sign>
<name>AutoSizeCol</name>
<vname>自动调整列宽</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>调整范围</name>
<showvalue1>调整所有列宽</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>只调整宽度太小的列宽</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>AutoSizeCol(起始列,结束列,调整范围)</function>
<caption>自动调整指定区域内列宽。</caption>
</act174>

<act175>
<type>0</type>
<sign>行列属性方法</sign>
<name>AutoSizeRow</name>
<vname>自动调整行高</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p2>
<p3>
<var>1</var>
<type>3</type>
<name>调整范围</name>
<showvalue1>调整所有行高</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>只调整高度太小的行高</showvalue2>
<realvalue2>false</realvalue2>
</p3>
</param>
<function>AutoSizeRow(起始行,结束行,调整范围)</function>
<caption>自动调整指定区域内行高。</caption>
</act175>

<act176>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetEvenBKColor</name>
<vname>返回调色器偶数行背景色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetEvenBKColor(行号)</function>
<caption>奇偶调色器功能方法。返回指定行为偶数时显示的背景颜色。</caption>
</act176>

<act177>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetOddBKColor</name>
<vname>返回调色器奇数行背景色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetOddBKColor(行号)</function>
<caption>奇偶调色器功能方法。返回指定行为奇数时显示的背景颜色。</caption>
</act177>

<act178>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetEvenTextColor</name>
<vname>返回调色器偶数行文字颜色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetEvenTextColor(行号)</function>
<caption>奇偶调色器功能方法。返回指定行为偶数时显示的文字颜色。</caption>
</act178>

<act179>
<type>1</type>
<sign>行列属性方法</sign>
<name>GetOddTextColor</name>
<vname>返回调色器奇数行文字颜色</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetOddTextColor(行号)</function>
<caption>奇偶调色器功能方法。返回指定行为奇数时显示的文字颜色。</caption>
</act179>

<act180>
<type>1</type>
<sign>行列属性方法</sign>
<name>IsColHide</name>
<vname>返回指定列是否隐藏</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>列号</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>IsColHide(列号)</function>
<caption>返回指定列显示或隐藏。如果返回TRUE，则表示指定列隐藏。</caption>
</act180>

<act181>
<type>1</type>
<sign>行列属性方法</sign>
<name>IsRowHide1</name>
<vname>返回指定行是否隐藏</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>列号</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>状态</name>
<showvalue1>打印状态</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>非打印状态</showvalue2>
<realvalue2>false</realvalue2>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>IsRowHide1(行号,状态)</function>
<caption>返回指定行在显示或打印状态是否隐藏。</caption>
</act181>

<act182>
<type>1</type>
<sign>行列属性方法</sign>
<name>IsRowAutoSize</name>
<vname>返回是否自动调整行高</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsRowAutoSize()</function>
<caption>返回当前报表是否自动调整行高。返回true时，在设置字体大小、设置文字自动换行及输入文字时会自动调整行高；返回false时，行高不会自动调整。</caption>
</act182>

<act183>
<type>1</type>
<sign>行列属性方法</sign>
<name>IsSelectWholeRow</name>
<vname>返回是否整行选中</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsSelectWholeRow()</function>
<caption>返回点击表格时光标是否整行选中。</caption>
</act183>




<act184>
<type>1</type>
<sign>单元组合方法</sign>
<name>GetCellCombiNationCols</name>
<vname>返回组合框的列数</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellCombiNationCols(行号,列号)</function>
<caption>返回组合单元中被组合的列数，如果是0，则表示列没有组合，1则表示有两列组合。</caption>
</act184>

<act185>
<type>1</type>
<sign>单元组合方法</sign>
<name>GetCellCombiNationRows</name>
<vname>返回组合框的行数</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellCombiNationRows(行号,列号)</function>
<caption>返回组合单元中被组合的行数，如果是0，则表示行没有组合，1则表示有两行组合。</caption>
</act185>

<act186>
<type>1</type>
<sign>单元组合方法</sign>
<name>GetCellCombiNationStartCol</name>
<vname>返回组合框的起始列</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellCombiNationStartCol(行号,列号)</function>
<caption>返回组合单元中的起始列，如果为0，则表示不是组合单元。</caption>
</act186>

<act187>
<type>1</type>
<sign>单元组合方法</sign>
<name>GetCellCombiNationStartRow</name>
<vname>返回组合框的起始行</vname>
<param>
<count>3</count>
<p1>
<var>1</var>
<type>1</type>
<name>行号</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>列号</name>
</p2>
<p3>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p3>
</param>
<function>GetCellCombiNationStartRow(行号,列号)</function>
<caption>返回组合单元中的起始行，如果为0，则表示不是组合单元。</caption>
</act187>

<act188>
<type>0</type>
<sign>单元组合方法</sign>
<name>UnCombiNation</name>
<vname>取消指定区域的组合单元格</vname>
<param>
<count>4</count>
<p1>
<var>1</var>
<type>1</type>
<name>起始行</name>
</p1>
<p2>
<var>1</var>
<type>1</type>
<name>起始列</name>
</p2>
<p3>
<var>1</var>
<type>1</type>
<name>结束行</name>
</p3>
<p4>
<var>1</var>
<type>1</type>
<name>结束列</name>
</p4>
</param>
<function>UnCombiNation(起始行,起始列,结束行,结束列)</function>
<caption>取消指定区域的单元格组合。</caption>
</act188>




<act189>
<type>1</type>
<sign>表格方法</sign>
<name>GetCursorBorderLineWidth</name>
<vname>返回光标外框线宽度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetCursorBorderLineWidth()</function>
<caption>返回单元光标外框线宽度。</caption>
</act189>

<act190>
<type>1</type>
<sign>表格方法</sign>
<name>GetJumpStyle</name>
<vname>返回光标跳转方向</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetJumpStyle()</function>
<caption>取得光标跳转方向，1：按列跳转 2：按行跳转。</caption>
</act190>

<act191>
<type>1</type>
<sign>表格方法</sign>
<name>GetLeftOffsetWidth</name>
<vname>返回报表显示区域左边偏移宽度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetLeftOffsetWidth()</function>
<caption>返回报表显示区域左边偏移宽度。</caption>
</act191>

<act192>
<type>1</type>
<sign>表格方法</sign>
<name>GetPaperColor</name>
<vname>返回报表页面背景色</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetPaperColor()</function>
<caption>返回表格页面的背景色，设置表格页面的背景色的方法请参考SetPaperColor。</caption>
</act192>

<act193>
<type>1</type>
<sign>表格方法</sign>
<name>GetSelectedCursorBkColor</name>
<vname>返回区域选中时的背景色</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetSelectedCursorBkColor()</function>
<caption>返回区域选中时光标显示的背景色。设置区域选中时光标显示的背景色的方法可以参考SetSelectedCursorBkColor。</caption>
</act193>

<act194>
<type>1</type>
<sign>表格方法</sign>
<name>GetTopOffsetHeight</name>
<vname>返回报表显示区域上边偏移高度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetTopOffsetHeight()</function>
<caption>返回报表显示区域上边偏移高度。</caption>
</act194>

<act195>
<type>1</type>
<sign>表格方法</sign>
<name>GetStartCol</name>
<vname>返回报表可见区域的起始列</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetStartCol()</function>
<caption>返回当前表格最小的可见列。举例：假设横滚动往右滚动，第1，2列已不可见，第3列在界面上面刚刚可见，则返回3。</caption>
</act195>

<act196>
<type>1</type>
<sign>表格方法</sign>
<name>GetStartRow</name>
<vname>返回报表可见区域的起始行</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetStartRow()</function>
<caption>返回当前表格最小的可见行。注意当有行表头设置时，行表头的行不是最小可见行，最小可见行是从行表头之后一行开始计算。</caption>
</act196>

<act197>
<type>1</type>
<sign>表格方法</sign>
<name>IsModified</name>
<vname>判断报表是否已被修改</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsModified()</function>
<caption>判断表格是否被修改过，true表示已经修改过，false表示没有修改过。</caption>
</act197>

<act198>
<type>1</type>
<sign>表格方法</sign>
<name>IsShowReportHorzCenter</name>
<vname>返回报表是否横向居中显示</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsShowReportHorzCenter()</function>
<caption>返回整张报表是否横向居中显示。</caption>
</act198>

<act199>
<type>1</type>
<sign>表格方法</sign>
<name>IsShowReportVertCenter</name>
<vname>返回报表是否纵向居中显示</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>IsShowReportVertCenter()</function>
<caption>返回整张报表是否纵向居中显示。</caption>
</act199>

<act200>
<type>0</type>
<sign>表格方法</sign>
<name>JumpNextCol</name>
<vname>设置光标按列跳转</vname>
<param>
<count>0</count>
</param>
<function>JumpNextCol()</function>
<caption>设置光标跳转方向，按回车光标跳到下一列。</caption>
</act200>

<act201>
<type>0</type>
<sign>表格方法</sign>
<name>JumpNextRow</name>
<vname>设置光标按行跳转</vname>
<param>
<count>0</count>
</param>
<function>JumpNextRow()</function>
<caption>设置光标跳转方向，按回车光标跳到下一行。</caption>
</act201>

<act202>
<type>0</type>
<sign>表格方法</sign>
<name>SetLeftOffsetWidth</name>
<vname>设置报表显示区域左边偏移宽度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>偏移量</name>
</p1>
</param>
<function>SetLeftOffsetWidth(偏移量)</function>
<caption>设置报表显示区域左边偏移宽度。返回报表显示区域左边偏移宽度可以参考GetLeftOffsetWidth。</caption>
</act202>

<act203>
<type>0</type>
<sign>表格方法</sign>
<name>SetTopOffsetHeight</name>
<vname>设置报表显示区域上边偏移高度</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>偏移量</name>
</p1>
</param>
<function>SetTopOffsetHeight(偏移量)</function>
<caption>设置报表显示区域上边偏移高度。返回报表显示区域上边偏移高度可以参考GetTopOffsetHeight。</caption>
</act203>

<act204>
<type>0</type>
<sign>表格方法</sign>
<name>SetSelectedCursorBkColor</name>
<vname>设置光标选中区域背景色</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>1</type>
<name>颜色值</name>
</p1>
</param>
<function>SetSelectedCursorBkColor(颜色值)</function>
<caption>设置区域选中时光标显示的背景色。</caption>
</act204>

<act205>
<type>0</type>
<sign>表格方法</sign>
<name>SetShowReportHorzCenter</name>
<vname>设置报表是否横向居中显示</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>2</type>
<name>是否居中</name>
</p1>
</param>
<function>SetShowReportHorzCenter(是否居中)</function>
<caption>设置整张报表是否横向居中显示。</caption>
</act205>

<act206>
<type>0</type>
<sign>表格方法</sign>
<name>SetShowReportVertCenter</name>
<vname>设置报表是否纵向居中显示</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>2</type>
<name>是否居中</name>
</p1>
</param>
<function>SetShowReportVertCenter(是否居中)</function>
<caption>设置整张报表是否纵向居中显示。</caption>
</act206>



<act207>
<type>0</type>
<sign>其他方法</sign>
<name>SetScriptString</name>
<vname>把XML串传入内存空间</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>0</type>
<name>XML字符串</name>
</p1>
</param>
<function>SetScriptString(XML字符串)</function>
<caption>把XML字符串读入到内存空间。</caption>
</act207>

<act208>
<type>1</type>
<sign>其他方法</sign>
<name>GetScriptItem</name>
<vname>从XML读入小节内容</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>0</type>
<name>小节名称</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetScriptItem(XML字符串)</function>
<caption>从XML字符串读取对应小节的内容。</caption>
</act208>


<act209>
<type>0</type>
<sign>报表统计方法</sign>
<name>SortByField</name>
<vname>字段排序</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>数据源序号</name>
</p1>
<p2>
<var>1</var>
<type>0</type>
<name>字段名</name>
</p2>
</param>
<function>SortByField(数据源序号,字段名)</function>
<caption>对指定数据源中的字段进行排序。调用此方法后，会立即按指定字段进行排序，对该字段区域的行进行排序。</caption>
</act209>

<act210>
<type>1</type>
<sign>单元格方法</sign>
<name>GetEditLineText</name>
<vname>获取正在编辑的单元格内容</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p1>
</param>
<function>GetEditLineText()</function>
<caption>获取当前正在编辑状态单元格的输入内容。</caption>
</act210>

<act211>
<type>0</type>
<sign>单元编辑方法</sign>
<name>SetCanEndEdit</name>
<vname>设置是否可以结束编辑</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否结束编辑</name>
<showvalue1>结束编辑状态</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不结束编辑状态</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetCanEndEdit(是否结束编辑)</function>
<caption>当在编辑状态时，可以设置是否可以结束编辑状态。如果设置为不结束编辑状态，则编辑状态始终不会结束，除非重新用此方法设置为可结束编辑状态。</caption>
</act211>

<act212>
<type>1</type>
<sign>单元用户自定义值方法</sign>
<name>GetCellUserStringValueRow</name>
<vname>返回自定义值所在行号</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>自定义值</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetCellUserStringValueRow(自定义值)</function>
<caption>返回指定用户自定义字符串值的单元所在行，如果返回为0表示没有找到指定用户自定义字符串值的单元。</caption>
</act212>

<act213>
<type>1</type>
<sign>单元用户自定义值方法</sign>
<name>GetCellUserStringValueCol</name>
<vname>返回自定义值所在列号</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>1</type>
<name>自定义值</name>
</p1>
<p2>
<var>1</var>
<type>5</type>
<name>返回值</name>
</p2>
</param>
<function>GetCellUserStringValueCol(自定义值)</function>
<caption>返回指定用户自定义字符串值的单元所在列，如果返回为0表示没有找到指定用户自定义字符串值的单元。</caption>
</act213>

<act214>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectTextHorzTextAlign</name>
<vname>对象文本横向对齐方式</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>对齐方式</name>
<showvalue1>缺省对齐</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>左边对齐</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>中间对齐</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>右边对齐</showvalue4>
<realvalue4>3</realvalue4>
</p2>
</param>
<function>SetObjectTextHorzTextAlign(对象句柄,对齐方式)</function>
<caption>设置指定对象的文本横向对齐方式。设置后显示立即刷新，不需要调用Refresh进行整表的刷新。</caption>
</act214>

<act215>
<type>0</type>
<sign>绘制方法</sign>
<name>SetObjectTextVertTextAlign</name>
<vname>对象文本纵向对齐方式</vname>
<param>
<count>2</count>
<p1>
<var>1</var>
<type>4</type>
<name>对象句柄</name>
</p1>
<p2>
<var>1</var>
<type>3</type>
<name>对齐方式</name>
<showvalue1>缺省对齐</showvalue1>
<realvalue1>0</realvalue1>
<showvalue2>上边对齐</showvalue2>
<realvalue2>1</realvalue2>
<showvalue3>中间对齐</showvalue3>
<realvalue3>2</realvalue3>
<showvalue4>下边对齐</showvalue4>
<realvalue4>3</realvalue4>
</p2>
</param>
<function>SetObjectTextVertTextAlign(对象句柄,对齐方式)</function>
<caption>设置指定对象的文本纵向对齐方式。设置后显示立即刷新，不需要调用Refresh进行整表的刷新。</caption>
</act215>

<act216>
<type>0</type>
<sign>单元格方法</sign>
<name>SetProtectFormShowCursor</name>
<vname>报表保护时是否显示光标</vname>
<param>
<count>1</count>
<p1>
<var>1</var>
<type>3</type>
<name>是否显示</name>
<showvalue1>显示光标</showvalue1>
<realvalue1>true</realvalue1>
<showvalue2>不显示光标</showvalue2>
<realvalue2>false</realvalue2>
</p1>
</param>
<function>SetProtectFormShowCursor(是否显示)</function>
<caption>设置报表保护时是否显示光标。</caption>
</act216>

</script>